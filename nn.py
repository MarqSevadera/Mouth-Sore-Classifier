import math

#---------------INPUT NORMALIZATION DATA------------------------
inputYmin = -1;
inputYmax = 1;
inputXmin = [8,10,8,5,5,15,13,30,15,2,5,9,5,9,9,6,5,9,5,2,4,6,10,7,0,7,5,4,1,2,1,6,0,0,0,5,2,4,4,2,0,10,0,0,3,2,20,3,4,2,0,0,0,0,4,5,5,6,24,2,0,0,2,0,0,21,31,16,13,1,0,0,18,9,9,2,12,20,6,7,0,0,12,9,32,27,24,7,8,1,0,10,10,9,13,9,9,8,6,0]
inputXmax = [244,250,248,251,255,254,254,255,255,255,246,245,238,242,247,255,252,255,255,255,244,245,237,249,254,244,247,252,255,255,240,251,246,243,246,245,246,253,255,255,255,239,247,246,246,241,240,254,255,255,254,236,243,246,255,238,239,255,255,255,254,253,251,244,241,246,231,255,255,255,253,254,254,254,238,240,250,255,255,255,252,253,254,248,250,254,241,255,255,255,253,253,252,253,246,237,251,255,255,255]
#---------------END OF INPUT NORMALIZATION DATA------------------


#----------------------------HIDDEN LAYER DATA--------------------
#these are the weights of each connection in each neuron of the hidden layer
#totalNeurons = 10; totalConnections = 100 per each neurons;
neuron1Weight = [0.082371866,-0.050599548,0.156558796,0.028149647,0.104665299,-0.315727299,0.103635435,0.287055081,-0.281334012,0.418496775,0.301367952,-0.127258308,0.08312231,0.778588913,0.428590334,0.56369059,0.156033487,0.38483824,-0.305188185,-0.504647835,0.105617965,0.434358846,-0.038182396,0.739478853,-0.370858384,-0.043015058,-0.381412467,-0.438648224,0.226865348,-0.422076528,0.011431071,-0.39167993,0.126378051,0.033986995,0.535612209,-0.214791787,0.686370292,0.032959214,-0.081246174,-0.188815554,0.097430736,-0.35910494,0.565370801,-0.615092908,0.636168596,-0.434548608,0.846720155,-0.267809311,0.24040746,-0.553808601,-0.827002522,0.259355299,0.388632912,-0.421064222,0.10415991,-0.067368654,-0.456016062,0.719793585,-0.822087026,-0.104659989,-0.192186082,0.379918501,-0.911855751,-0.802502307,0.143263254,-0.400392308,-0.201444355,-0.096935977,-0.180879557,0.297268463,0.045421058,-0.428548703,-0.169302735,-0.128611535,-0.088259413,0.588249255,0.036426398,-1.026713055,-0.392569176,0.264274304,0.116972719,0.34242854,-0.778318647,0.606920027,-0.261977024,0.425642668,-0.435847655,0.253475923,-0.005706957,-0.433086021,-0.02536699,-0.296772876,0.151500636,-0.20242416,0.871179268,-1.062028998,0.280528921,0.18573491,-0.220304814,0.001692631]
neuron2Weight = [0.170859939,0.044711014,0.368697639,-0.014305426,0.211361198,-0.166036462,0.684738538,0.68685911,0.154787107,-0.028660023,0.222492316,0.20630922,0.005662777,-0.181637942,-0.075744338,-0.00269928,-0.021611849,0.020995662,0.104714267,0.065432547,-0.017661869,0.023127495,0.23520386,0.1574179,0.055351948,0.251087264,-0.233258043,-0.526499004,-0.379247245,-0.138123053,-0.18322817,0.341276233,0.444637383,-0.203025655,0.333045522,0.276395217,0.365427806,0.417746499,0.239730531,0.466751866,0.126669648,-0.277274887,0.240306491,-0.334049115,0.058540843,0.007953037,0.419732805,0.362555401,0.159938091,0.364252266,0.246967884,-0.193929041,0.369210194,-0.601355607,0.085441115,0.125183999,-0.331418401,-0.667582095,0.399901879,0.491230988,-0.384234423,0.158867442,0.242731,0.075302621,0.234156917,0.045470661,0.24056737,0.38946893,0.468792928,0.402496228,-0.448631469,-0.02801903,0.356181724,0.014002932,0.258813001,0.354068758,-0.388422164,0.241034848,-0.146234733,-0.650093912,0.035408476,-0.073781883,0.016978284,-0.426836263,-0.433281013,-0.138869848,-0.34566635,0.334237985,0.016357323,0.019606522,-0.178173086,0.435362349,0.537169549,0.019693924,-0.005117857,0.070472395,0.058702819,0.256296975,-0.102617749,-0.158812771]
neuron3Weight = [-0.042881191,-0.292230894,-0.137457464,0.301326195,0.541335324,0.114499268,-0.12887022,-0.317188637,0.342954668,0.08473689,-0.600064109,0.111021055,0.215389299,0.535751814,0.064325274,0.118567116,0.514979539,-0.232778287,-0.11821923,0.377764388,-0.224029725,0.080190013,0.100651645,-0.331505976,0.02379112,0.031382949,0.022693418,0.091929846,-0.120280539,0.193699804,-0.307684125,0.295875329,0.188064502,-0.563139212,-0.19778223,-0.098746393,-0.130424009,-0.06271747,-0.252394383,0.342003468,-0.330541591,0.298528643,-0.447141776,-0.179411618,-0.091793389,0.306301227,-0.355294878,0.204798116,-0.617834078,0.179594178,-0.069625833,-0.492193826,-0.108442323,0.136857544,-0.32585685,-0.546909107,-0.593940169,-0.816254797,0.034594597,-0.372335925,0.093429608,0.039110778,0.237809361,0.156674538,-0.169339576,-0.520896661,-0.31033114,-0.267178793,-0.164739308,0.202297632,0.165324107,0.287860161,-0.018478089,-0.138414512,-0.312106169,-0.19034497,-0.049424309,-0.208672913,0.107739058,-0.135612349,-0.054308373,-0.127451993,0.25585311,-0.239127116,-0.517696519,-0.169439052,-0.010817402,0.139929628,-0.416654742,0.512711632,-0.290923835,0.192632134,0.191668422,-0.184802893,-0.089701163,-0.085962483,-0.286699236,-0.238963851,-0.100634441,-0.378605386]
neuron4Weight = [-0.084014373,0.082058569,-0.118429297,0.023662217,-0.278877155,-0.031020555,0.032873757,-0.062600086,-0.202214715,0.265291445,0.563994066,-0.210691049,-0.171740265,-0.519572168,-0.00331209,0.273247127,-0.154453961,-0.181968943,-0.328328222,-0.055212486,0.227345813,-0.50741065,0.287419013,-0.205007225,-0.199315577,-0.250302785,0.091914612,0.058152653,0.10867095,0.175232305,0.32967583,-0.426865021,-0.238348477,-0.033753978,-0.188300203,-0.117994631,-0.211971147,0.037841281,-0.243340585,-0.198946162,-0.110925662,-0.288093485,0.373842792,0.472427082,-0.311903775,-0.990814194,0.369084457,-0.059740798,-0.230089212,0.065379526,0.244762652,-0.482395056,0.081048984,-0.46985779,-0.085923534,-0.440640433,-0.115601995,-0.267653374,0.114077362,0.118060702,0.261628259,-0.01073508,0.814815752,0.306030783,-0.455498068,0.05951759,0.319291154,0.355778139,-0.141800827,-0.015952194,0.184612766,-0.049670617,0.473901509,0.565246087,-0.101009396,-0.030013543,-0.108609012,0.466611726,0.10166711,-0.231370916,0.128112021,0.31033636,-0.021994351,-0.203813048,-0.102260773,-0.146978806,0.493007065,-0.352416073,-0.181292137,-0.059799128,0.049241476,0.164543606,0.085181525,0.327524403,-0.177599432,0.223894199,0.116996089,0.197031083,0.02866235,0.091784529]
neuron5Weight = [-0.006367883,0.050564948,0.068425384,0.194930306,-0.560774165,-0.801218279,0.324816127,0.204145848,-0.966849092,1.146388368,0.387213566,-1.429247051,0.562191331,-0.222444748,0.216920825,0.149956103,-0.797653685,0.953766885,-1.338579152,-0.597621027,-0.299871885,-0.574315053,1.008537615,0.470593567,-0.093427047,-0.032626529,0.26144299,-0.54343698,0.666771333,0.75165212,-0.063656536,-0.842880854,0.033912265,0.366093899,0.323340893,-0.019001787,-0.57487518,-0.279524399,0.529890052,-0.379393907,0.000214135,-0.389993082,0.115662311,0.558375902,0.476098992,-0.289581927,0.999519877,-0.965374708,-0.684352002,-0.140855514,0.117964423,0.165710361,0.253887397,-0.256403938,0.260219635,0.506979856,0.046278149,0.940839854,-0.28415694,0.325862883,0.250736875,0.485596299,-0.899624288,-0.275678111,0.400240541,0.535840294,-1.027891433,-0.058803795,0.550056586,0.18368969,-1.063557288,-0.839607778,-0.559374164,0.571536585,0.449620024,0.273129267,-0.132770923,-0.086313096,-0.034058913,-0.733299899,-0.504441659,0.853687136,-1.053692629,0.549307287,-1.04743843,0.239937371,-0.520853652,-0.097646338,-0.466895745,-0.677530861,0.260885405,-0.50552301,0.624585745,0.350723188,1.215029738,-0.050135151,-0.003905741,0.695253883,-0.402959517,0.26313791]
neuron6Weight = [0.059724968,-0.144929218,-0.170303542,-0.021009662,-0.068246011,0.216412872,-0.247469533,-0.144977526,0.083406046,-0.149648329,-0.151216076,-0.036972133,0.201408571,-0.04877842,-0.333972225,-0.308374577,-0.187017892,-0.208149335,0.228597375,-0.065853759,-0.031021089,0.309598193,-0.548750774,-0.018784534,-0.110928355,-0.419760853,0.072267409,-0.131260346,0.214229427,-0.2276261,0.148216874,-0.020146314,0.224042552,-0.104789057,-0.198682718,-0.32580045,-0.134339488,-0.092019203,-0.149381964,0.048642803,0.145749263,0.214837916,-0.068106281,-0.216409879,0.069296246,0.407585577,-0.454539005,-0.014492077,-0.230196239,0.251802374,0.023776053,0.129153144,0.036094583,0.473732439,0.134831171,0.33838057,-0.170849724,0.359327384,-0.327200385,0.036059146,0.048443858,-0.017549695,0.018380191,0.352793941,0.470910731,0.26967807,-0.031073779,0.139336024,0.048258979,-0.3641073,-0.199586522,0.325746385,0.316802695,0.129071897,0.515950454,0.03165949,0.040082827,-0.309197891,0.008090687,-0.188947375,0.038413408,0.033605834,0.135765451,-0.024454765,-0.008323372,-0.088523528,-0.232317094,-0.301349509,-0.160370515,0.375785379,-0.179666193,-0.297835117,0.014806767,-0.160748949,0.113850582,-0.246332004,-0.204039144,-0.334749484,-0.183276015,0.120636428]
neuron7Weight = [0.288176972,0.197862132,0.287609291,-0.370253504,-0.259745438,0.170939038,0.08379869,0.385084278,-0.305699676,0.799023923,0.21092293,-0.46510179,0.413215572,-0.111304985,0.307061019,-0.002728832,-0.69554435,0.042008513,-0.124967463,-0.430019078,0.008451321,0.287333406,0.344590094,0.098566239,-0.28250217,-0.461403813,0.329508261,-0.08923185,0.424467587,0.252454628,0.337764531,0.314425904,0.176208833,-0.875221298,-0.291323291,-0.82133713,-0.493475397,-0.048206681,0.427911245,-0.090602864,0.08143419,0.402896882,0.048502884,-0.066413671,0.156521471,-0.655644609,0.456190609,-1.129216732,0.20646398,-0.559883473,0.491183449,0.272166857,0.046291908,-0.747337692,0.349022481,-0.414777779,0.283848783,1.272815452,-0.688804632,-0.345882392,0.447100064,0.515385096,-0.778476104,0.034854052,-0.42377054,-0.008390689,-1.172340859,0.429572239,0.062952649,0.286341322,-0.540616929,-0.788680443,0.270345578,-0.738269456,-0.104971794,0.407870873,-0.393917172,0.161438571,-0.114444399,0.431066714,-0.102265078,0.574562025,-0.096048052,0.343479268,0.101015849,0.933371689,-0.676890917,0.391231448,-0.49851528,-0.309403129,0.605207233,0.088729353,-0.013651915,0.034249218,0.973742095,-0.841645505,-0.325722204,0.084140275,0.024009114,0.356688014]
neuron8Weight = [0.301748212,0.457054635,0.285620949,0.013899069,0.256181695,0.34238555,-0.243486034,0.069228146,-0.366473865,0.411905397,0.41188013,-0.372141127,-0.251115992,-0.194789846,0.030842872,-0.358855446,-0.350724779,0.655678781,-0.442908854,-0.497530655,0.33496938,0.014007141,0.040745804,0.226971922,0.340627674,-0.408408306,0.376034463,-0.229778253,0.367012045,-0.005204396,0.140606939,-0.101232372,-0.309362032,-0.204561931,-0.271161199,-1.013542205,-0.188397243,0.180635242,0.212936232,0.112396049,0.076442774,0.042488273,-0.166202988,-0.886194611,-0.377000878,-1.051506716,-0.045027132,-0.399052757,0.719377541,-0.295620501,-0.087145379,0.383810934,0.277167347,-0.713606618,0.034094131,-0.38964423,-0.03670964,1.275387994,-0.077888262,-0.177487589,0.38853803,-0.085305864,-0.625684065,-1.027850972,0.236424006,-0.207486936,-1.439970147,-0.206552139,-0.285871515,0.125586714,0.150795782,-0.52687234,-0.438962987,-0.37467141,-0.026685844,0.023189611,-0.612305125,-0.78793098,-0.121158652,-0.063125233,0.291265818,0.223018967,-0.908103098,-0.061729636,0.320583729,0.090267611,-1.096264304,-0.726030056,0.18428656,-0.556538667,0.520571841,-0.076814955,-0.626985239,-0.559767747,-0.079109342,-0.162906444,-0.045854459,0.313643453,-0.125580953,0.616275544]
neuron9Weight = [-0.279835007,-0.30949472,0.129850273,-0.285713528,0.047727064,-0.43021568,0.39865935,0.306269008,-0.149248708,-0.451691648,-0.313696875,0.126715206,-0.268342037,-0.0188834,0.107477908,0.321999102,0.566481307,-0.376418335,-0.317318209,-0.089742053,-0.266736352,0.73682985,-0.217419861,0.550481327,0.085788068,0.179163341,-0.300849074,0.046049436,-0.391551459,-0.287340826,-0.129625754,0.707622632,0.406191561,-0.010923625,0.210106282,0.032947402,0.287706238,0.093757976,-0.247871677,0.378095962,-0.234116946,0.410739076,-0.154811074,-0.09833129,0.201016156,0.084686055,0.153122011,0.062649965,-0.258819037,0.113543206,-0.499820372,-0.09949161,0.308227905,-0.091512682,0.305270794,-0.021918077,-0.343165026,-0.041272552,-0.380123329,-0.411794881,-0.618160597,-0.239838425,-0.589694274,-0.704580131,-0.144547866,-0.208883444,-0.579143779,0.442559663,-0.036251924,-0.418248847,-0.251148308,-0.24937106,-0.080389374,-0.62005815,-0.421188665,0.233290296,0.089207316,-0.271012089,-0.262307386,-0.011949005,-0.060976455,-0.271882834,-0.564184923,-0.397457072,0.007966989,0.0348793,-0.134137839,0.246505708,-0.632440446,0.188206234,-0.231380196,0.25287766,-0.132667225,0.362145866,0.172560499,-0.105415153,-0.171976726,-0.157000444,0.041462705,-0.562636685]
neuron10Weight = [-0.133735605,0.049496486,0.03122067,-0.223645006,-0.253770146,0.251899521,-0.115660062,0.087215493,0.166006591,-0.04170689,-0.027935994,-0.244506956,-0.351352156,0.172455048,-0.003205068,0.486214608,0.291272615,0.223207136,0.036446196,-0.142659807,-0.181835673,0.237839465,0.406093009,0.459606993,0.297090174,0.008413861,0.418540062,-0.09075211,0.108723519,-0.079592208,-0.069083508,0.111336947,-0.313331334,0.168637529,0.274291094,-0.073445446,0.200729713,-0.2643209,0.144240371,0.133373325,-0.491595261,-0.418108982,0.325791762,-0.129830629,0.39569586,-0.151509809,0.251264403,-0.22620144,-0.043409567,-0.02882692,-0.456389904,-0.305068726,0.091199493,-0.382082673,-0.334601952,-0.346180908,-0.095225424,-0.452008706,0.120231821,0.229901502,-0.103582416,-0.071284687,0.229100868,0.086133731,-0.532665923,-0.12869593,0.158913542,0.048963021,-0.051735651,0.241560216,-0.083495074,0.017964167,0.472102646,-0.164762144,-0.181655728,0.267964583,0.036682119,0.014045028,0.26250965,0.316609291,0.239160476,0.094354358,0.084514591,-0.065107593,-0.102579661,0.013828311,0.304276017,-0.185721225,0.151952963,0.133431958,0.378862062,-0.071489086,0.287513141,-0.282061593,-0.220805533,-0.035529307,-0.0882202,0.08727679,0.402134078,0.469785541]
#these are the biases of each neuron of the hidden layer
hiddenNeuronBias = [1.72062120128672, -0.899726620983626,
                    -1.08210554863233,0.811953179168629,
                    -0.0532046921429435,0.407205187351631,
                    -1.23467693094911,-0.920196801855380,
                    -1.35512663343813,-1.44448051881230] 
#---------------------------END OF HIDDEN LAYER DATA--------------


#----------------OUTPUTLAYER DATA---------------------------------

#these are the weights of each connection in the final neuron of the outputlayer
#totalNeurons = 1; totalConnections = 10;
outputLayerWeight = [-3.63992484065281,-2.42130672482906,2.07949034601743,-2.43211122120522,-5.22183219887626,1.52052666211015,-3.94689724487790,	-3.44323981218967,3.04760588052922,-1.94495555370056]

#this is the bias of the neuron of the outputlayer
outputNeuronBias = 0.118007790753033;


#----------------END OF OUTPUTLAYER DATA--------------------------


#----------------OUTPUT DENORMALIZATION DATA----------------------
outputGain = .6667;
outputXmax = 4;
outputXmin = 1;
outputYmin = -1;
outputYmax = 1;
#---------------END OF OUTPUT DENORMALIZATION DATA------------------


class Neuron:
   
    def __init__(self,b):
        self.bias = b;

    def getOutput(self,input, weights):
        size = len(input);
        sum = 0;
        for i in range (0,size):
           sum += input[i] * weights[i];
        
        return math.tanh (sum + self.bias);#add the bias and perform tansig activation function

class HiddenLayer:
   
   def __init__(self):
      self.neuronList = [];
      for i in range (0 , 10):
         self.neuronList.append(Neuron(hiddenNeuronBias[i]));
         
   def getOutput(self,input):
      outputList = [];
      outputList.append((self.neuronList[0]).getOutput(input,neuron1Weight));
      outputList.append((self.neuronList[1]).getOutput(input,neuron2Weight));
      outputList.append((self.neuronList[2]).getOutput(input,neuron3Weight));
      outputList.append((self.neuronList[3]).getOutput(input,neuron4Weight));
      outputList.append((self.neuronList[4]).getOutput(input,neuron5Weight));
      outputList.append((self.neuronList[5]).getOutput(input,neuron6Weight));
      outputList.append((self.neuronList[6]).getOutput(input,neuron7Weight));
      outputList.append((self.neuronList[7]).getOutput(input,neuron8Weight));
      outputList.append((self.neuronList[8]).getOutput(input,neuron9Weight));
      outputList.append((self.neuronList[9]).getOutput(input,neuron10Weight));
      return outputList;

class OutputLayer:

   def __init__(self):
      self.neuron = Neuron(outputNeuronBias);
                        
   def getOutput(self,input):
      return self.neuron.getOutput(input,outputLayerWeight);
                        


#performs interpolation to scale the input between -1 and 1
def normalize(input):
   normalizedInput = []
   for i in range (0,100):
      x = (inputYmax-inputYmin) * (input[i]-inputXmin[i]) / (inputXmax[i] - inputXmin[i]) + inputYmin;
      normalizedInput.append(x);
   return normalizedInput;


#denormalize output to scale it between 1 and 4
def denormalize(x):
   return (x - outputYmin) / outputGain + outputXmin ;
                        


def feedForward(input):
   normalizedInput = normalize(input); #input normalization
   hiddenLayer = HiddenLayer(); #initialization of hiddenlayer
   outputLayer = OutputLayer(); #initialization of outputlayer
   
   hiddenLayerOutput = hiddenLayer.getOutput(normalizedInput);
   outputLayerOutput = outputLayer.getOutput(hiddenLayerOutput);
   finalOutput = denormalize(outputLayerOutput);
   return finalOutput;
   
   
   


